# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\WeatherService:
        arguments:
            $apiKey: '%env(OPENWEATHER_API_KEY)%'
            $apiUrl: '%env(OPENWEATHER_API_URL)%'
            $apiImgUrl: '%env(OPENWEATHER_IMG_URL)%'
            $request: '@request_stack'
    App\Service\WeatherReportService:
        arguments:
            $request: '@request_stack'
    App\Service\ApiKeyService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $apiKeyRepository: '@App\Repository\ApiKeyRepository'
    App\EventListener\ApiKeyHeaderListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: 10 }
        arguments:
            $apiKeyService: '@App\Service\ApiKeyService'
    App\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', priority: 10 }

